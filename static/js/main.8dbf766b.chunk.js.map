{"version":3,"sources":["logo.svg","Components/NavBar.js","Components/StyledButton.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","class","className","href","Component","StyledButton","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hex","backgroundColor","r","toString","g","b","styles","parseColor","style","text","defaultProps","Home","Components_NavBar","Components_StyledButton","App","Components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCsBzBC,0LAfP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mDAIPH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yDACXJ,EAAAC,EAAAC,cAAA,KAAGC,MAAM,wBAAwBE,KAAK,KAAtC,QACAL,EAAAC,EAAAC,cAAA,KAAGC,MAAM,wBAAwBE,KAAK,KAAtC,WACAL,EAAAC,EAAAC,cAAA,KAAGC,MAAM,wBAAwBE,KAAK,KAAtC,oBAbCC,cCCfC,cACF,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACTH,8EAIN,IAAIO,EAAK,IAKT,OAJAA,GAAOJ,KAAKH,MAAMQ,gBAAgBC,EAAEC,SAAS,IAC7CH,GAAOJ,KAAKH,MAAMQ,gBAAgBG,EAAED,SAAS,IAC7CH,GAAOJ,KAAKH,MAAMQ,gBAAgBI,EAAEF,SAAS,IAC7CH,GAAOJ,KAAKH,MAAMQ,gBAAgBf,EAAEiB,SAAS,qCAK7C,IAAIG,EAAS,CACTL,gBAAkBL,KAAKW,cAE3B,OACItB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qBAAqBmB,MAAOF,GAC1CrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,IAA+BO,KAAKH,MAAMgB,KAA1C,aApBWlB,aA0B3BC,EAAakB,aAAe,CACxBD,KAAO,eACPR,gBAAkB,CAACC,EAAI,IAAKE,EAAE,IAAKC,EAAE,IAAKnB,EAAE,MAGjCM,QCMAmB,mLAlCP,OACI1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MACXJ,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAEXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,mBAKJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAf,0MAQJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAC0B,EAAD,CAAcJ,KAAK,cAAcR,gBAAiB,CAACC,EAAI,IAAKE,EAAI,GAAIC,EAAI,IAAKnB,EAAG,QAEpFD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAC0B,EAAD,CAAcJ,KAAK,eAAeR,gBAAiB,CAACC,EAAI,IAAKE,EAAI,GAAIC,EAAI,IAAKnB,EAAG,kBA3B1FK,aCiBJuB,0LAbX,OACE7B,EAAAC,EAAAC,cAAC4B,EAAD,aAHYxB,cCMEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8dbf766b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React , {Component} from 'react'\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        var styles = {\r\n            backgroundColor : \"#08080840\"\r\n        }\r\n        return (\r\n            <nav class=\"navbar navbar-dark navbar-expand-md sticky-top \">\r\n                {/* <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n                <div className=\"row justify-content-start justify-content-med-between\">\r\n                    <a class=\"navbar-brand col mx-4\" href=\"/\">Home</a>\r\n                    <a class=\"navbar-brand col mx-4\" href=\"/\">Gallery</a>\r\n                    <a class=\"navbar-brand col mx-4\" href=\"/\">Contact</a>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React , {Component, Fragment} from 'react'\r\n\r\n\r\nclass StyledButton extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    parseColor(){\r\n        var hex =\"#\"\r\n        hex += this.props.backgroundColor.r.toString(16)\r\n        hex += this.props.backgroundColor.g.toString(16)\r\n        hex += this.props.backgroundColor.b.toString(16)\r\n        hex += this.props.backgroundColor.a.toString(16)\r\n        return hex;\r\n    }\r\n\r\n    render(){\r\n        var styles = {\r\n            backgroundColor : this.parseColor()\r\n        }\r\n        return (\r\n            <button className=\"btn sub-text w-100\" style={styles}>\r\n                <div className=\"btn-text-sm\"> {this.props.text} </div>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nStyledButton.defaultProps = {\r\n    text : \"Default text\",\r\n    backgroundColor : {r : 100, g:100, b:100, a:100}\r\n}\r\n\r\nexport default StyledButton;","import React , {Component, Fragment} from 'react'\r\nimport NavBar from './NavBar'\r\nimport StyledButton from './StyledButton'\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"bg\">\r\n                <NavBar/>\r\n                <div className=\"container py-5\">\r\n                    \r\n                    <div className=\"row my-2\">\r\n                        <div className=\"main-text\">\r\n                            Dellon Collins\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row w-75 px-4 px-md-0 my-2 mb-5\">\r\n                        <div className=\"sub-text\">\r\n                        I am a software associate from Columbus, OH and \r\n                        am currently living in Indianapolis. My area of work\r\n                        is Digital Experience/UI. If you are interested in my work\r\n                        please do not hesitate to contact me.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row w-50 mt-5\">\r\n                        <div className=\"col-lg my-3 my-lg-0\">\r\n                            <StyledButton text=\"See my work\" backgroundColor={{r : 200, g : 55, b : 150, a: 150} }/>\r\n                        </div>\r\n                        <div className=\"col-lg my-3 my-lg-0\">\r\n                            <StyledButton text=\"Get in touch\" backgroundColor={{r : 200, g : 55, b : 150, a: 150} }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport logo from './logo.svg';\nimport NavBar from './Components/NavBar'\nimport Home from './Components/Home'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Home/>\n      \n        // <Fragment>\n        //     <div className=\"bg\">\n        //     <NavBar></NavBar>\n            \n        //     </div>\n        // </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}